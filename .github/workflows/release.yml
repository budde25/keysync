on:
  repository_dispatch:
    types: [tag-created]

jobs:
  build-bin: 
  if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
  name: Build Bin
  runs-on: ubuntu-latest
  needs: [check, test]
  steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Build Bin
      run: cargo build --release --all-features
    - uses: actions/upload-artifact@v2
      with:
        name: binary-latest
        path: target/release/keysync
        
build-deb: 
  if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
  name: Build Deb
  runs-on: ubuntu-latest
  needs: [check, test]
  steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Install cargo-deb
      run: cargo install cargo-deb
    - name: Build package
      run: cargo-deb
    - uses: actions/upload-artifact@v2
      with:
        name: debian-latest
        path: target/debian/*.deb
        
release:
  if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
  name: Publish Release
  needs: [build-bin, build-deb]
  runs-on: ubuntu-latest

  steps:
  - name: Download binary artifacts
    uses: actions/download-artifact@v1
    with:
      name: binary-latest

  - name: Download Debian artifacts
    uses: actions/download-artifact@v1
    with:
      name: debian-latest

  - name: Upload assets
    uses: svenstaro/upload-release-action@v2
    with:
      repo_token: ${{ secrets.GITHUB_TOKEN }}
      file: ./*-latest/*
      asset_name: mything
      tag: ${{ github.ref }}
      overwrite: true
      file_glob: true

release-cargo:
  if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
  name: Publish Cargo
  needs: [check, test]
  runs-on: ubuntu-latest
  
  steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Publish
      run: cargo publish --token ${{ secrets.CRATES_TOKEN }}
